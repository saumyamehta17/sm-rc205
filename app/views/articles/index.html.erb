<!--one way to have javascript on same line i.e obtrusive javascript-->
  <!--<h3><%# link_to 'Click' , root_path, onclick: "alert('hii');" %></h3>-->
<!--another way to have javascript on same template i.e unobtrusive javascript-->
  <h3><%= link_to 'Click' , root_path, id: 'alert_message', data: "Hello its a message" %></h3>
<%- model_class = Article -%>
<div class="page-header">
  <h1><%=t '.title', :default => model_class.model_name.human.pluralize.titleize %></h1>
</div>
<table class="table table-striped">
  <thead>
    <tr>
      <th><%= model_class.human_attribute_name(:name) %></th>      <th><%= model_class.human_attribute_name(:created_at) %></th>
      <th><%=t '.actions', :default => t("helpers.actions") %></th>
    </tr>
  </thead>
  <tbody>
    <% @articles.each do |article| %>
      <tr>
        <td><%= article.name %></td>
        <td>
          <%= link_to t('.edit', :default => t("helpers.links.edit")),
                      edit_article_path(article), :class => 'btn btn-mini' %>
          <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
                      article_path(article),
                      :method => :delete,
                      :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
                      :class => 'btn btn-mini btn-danger' %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<%= link_to t('.new', :default => t("helpers.links.new")),
            new_article_path,
            :class => 'btn btn-primary' %>
<script>
  $('#alert_message').click(function(){
      alert(this.getAttribute("data"));
//      return false;
  })
</script>